<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>IndexViewModel
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "Lista";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Lista <#= ViewDataTypeShortName #></h3>
                    <div class="box-tools">
                        <div class="row">
                            <div class="col-sm-7 m-b-xs">
                                <a type="button" class="btn btn-sm btn-primary" href="@Url.Action("Create")"> <i class="fa fa-plus"></i> Agregar</a>
                                <a type="button" class="btn btn-sm btn-success" href="@Url.Action("ReportExcel")"> <i class="fa fa-file-excel-o"></i> Reporte Excel</a>
                                <a type="button" class="btn btn-sm btn-warning" href="@Url.Action("ReportPDF")"> <i class="fa fa-file-pdf-o"></i> Reporte PDF</a>
                            </div>
                            <div class="col-sm-5 m-b-xs">
                                @using (Html.BeginForm("Index", "<#= ViewDataTypeShortName #>", FormMethod.Get))
                                {
                                    <div class="input-group">
                                        @Html.TextBox("Search", null, new { @class = "input-sm form-control" })
                                        <span class="input-group-btn">
                                            <button class="btn btn-sm btn-primary" type="submit"> Buscar</button>
                                        </span>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box-body">
<table class="table table-bordered table-striped">
    <tr>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <th>
            @Html.DisplayNameFor(model => model.Items[0].<#= GetValueExpression(property) #>)
        </th>
<#
    }
}
#>
        <th></th>
    </tr>

@foreach (var item in Model.Items) {
    <tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <td>
            @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
        </td>
<#
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
        <td>
			<a class="btn btn-primary btn-xs" href="@Url.Action("Details", new { id=item.<#= pkName #> })">
				<i class="fa fa-file" aria-hidden="true"></i> Detalle
            </a>
			<a class="btn btn-success btn-xs" href="@Url.Action("Edit", new { id=item.<#= pkName #> })">
				<i class="fa fa-pencil" aria-hidden="true"></i> Editar
            </a>
			<a class="btn btn-danger btn-xs" href="@Url.Action("Delete", new { id=item.<#= pkName #> })">
				<i class="fa fa-trash" aria-hidden="true"></i> Eliminar
            </a>
        </td>
<#
} else {
#>
        <td>
			@Html.ActionLink("Detalle", "Details", new { /* id=item.PrimaryKey */ }, new { @class = "btn btn-primary btn-xs"})
            @Html.ActionLink("Editar", "Edit", new { /* id=item.PrimaryKey */ }, new { @class = "btn btn-success btn-xs"})
            @Html.ActionLink("Eliminar", "Delete", new { /* id=item.PrimaryKey */ }, new { @class = "btn btn-danger btn-xs"})
        </td>
<#
}
#>
    </tr>
}

</table>
<nav>
                        <ul class="pagination pagination-sm">
                            @for (int x = 1; x < Model.Pager.TotalPages + 1; x++)
                            {
                                if (x == Model.Pager.CurrentPage)
                                {
                                    <li class="active"><a href="#">@x <span class="sr-only">(current)</span></a></li>
                                }
                                else
                                {
                                    <li><a href="@Url.Action("Index", new { page = @x, Search = @ViewBag.Search })">@x </a></li>
                                }
                            }
                        </ul>
                   </nav>
                </div>
            </div>
        </div>
    </div>
</section>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>